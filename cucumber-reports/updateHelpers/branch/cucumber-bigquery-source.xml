<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testsuite failures="1" name="cucumber.runtime.formatter.JUnitFormatter" skipped="0" tests="14" time="727.293773">
<testcase classname="BigQuery source - Validate BigQuery source plugin error scenarios" name="Verify BigQuery Source properties validation errors for mandatory fields" time="5.648402">
<system-out><![CDATA[Given Open Datafusion Project to configure pipeline.........................passed
When Source is BigQuery.....................................................passed
Then Open BigQuery source properties........................................passed
Then Enter the BigQuery properties with blank property "referenceName"......passed
Then Validate mandatory property error for "referenceName"..................passed
]]></system-out>
</testcase>
<testcase classname="BigQuery source - Validate BigQuery source plugin error scenarios" name="Verify BigQuery Source properties validation errors for mandatory fields 2" time="5.736527">
<system-out><![CDATA[Given Open Datafusion Project to configure pipeline.........................passed
When Source is BigQuery.....................................................passed
Then Open BigQuery source properties........................................passed
Then Enter the BigQuery properties with blank property "dataset"............passed
Then Validate mandatory property error for "dataset"........................passed
]]></system-out>
</testcase>
<testcase classname="BigQuery source - Validate BigQuery source plugin error scenarios" name="Verify BigQuery Source properties validation errors for mandatory fields 3" time="5.779868">
<system-out><![CDATA[Given Open Datafusion Project to configure pipeline.........................passed
When Source is BigQuery.....................................................passed
Then Open BigQuery source properties........................................passed
Then Enter the BigQuery properties with blank property "table"..............passed
Then Validate mandatory property error for "table"..........................passed
]]></system-out>
</testcase>
<testcase classname="BigQuery source - Validate BigQuery source plugin error scenarios" name="Verify BigQuery Source properties validation errors for incorrect values" time="14.339813">
<system-out><![CDATA[Given Open Datafusion Project to configure pipeline.........................passed
When Source is BigQuery.....................................................passed
Then Open BigQuery source properties........................................passed
Then Enter BigQuery property reference name.................................passed
Then Enter the BigQuery source properties with incorrect property "dataset" value "bqIncorrectDataset".passed
Then Validate BigQuery source incorrect property error for table "dataset" value "bqIncorrectDataset".passed
]]></system-out>
</testcase>
<testcase classname="BigQuery source - Validate BigQuery source plugin error scenarios" name="Verify BigQuery Source properties validation errors for incorrect values 2" time="15.984054">
<system-out><![CDATA[Given Open Datafusion Project to configure pipeline.........................passed
When Source is BigQuery.....................................................passed
Then Open BigQuery source properties........................................passed
Then Enter BigQuery property reference name.................................passed
Then Enter the BigQuery source properties with incorrect property "table" value "bqIncorrectTableName".passed
Then Validate BigQuery source incorrect property error for table "table" value "bqIncorrectTableName".passed
]]></system-out>
</testcase>
<testcase classname="BigQuery source - Validate BigQuery source plugin error scenarios" name="Verify BigQuery Source properties validation errors for incorrect values 3" time="13.632376">
<system-out><![CDATA[Given Open Datafusion Project to configure pipeline.........................passed
When Source is BigQuery.....................................................passed
Then Open BigQuery source properties........................................passed
Then Enter BigQuery property reference name.................................passed
Then Enter the BigQuery source properties with incorrect property "datasetProject" value "bqIncorrectDatasetProjectId".passed
Then Validate BigQuery source incorrect property error for table "datasetProject" value "bqIncorrectDatasetProjectId".passed
]]></system-out>
</testcase>
<testcase classname="BigQuery source - Validate BigQuery source plugin error scenarios" name="Verify BigQuery Source properties validation errors for incorrect format of projectIds" time="8.47277">
<system-out><![CDATA[Given Open Datafusion Project to configure pipeline.........................passed
When Source is BigQuery.....................................................passed
Then Open BigQuery source properties........................................passed
Then Enter BigQuery property reference name.................................passed
Then Enter BigQuery property projectId "bqIncorrectFormatProjectId".........passed
Then Enter BigQuery property datasetProjectId "projectId"...................passed
Then Enter BigQuery property dataset "dataset"..............................passed
Then Enter BigQuery source property table name..............................passed
Then Verify plugin properties validation fails with 1 error.................passed
]]></system-out>
</testcase>
<testcase classname="BigQuery source - Validate BigQuery source plugin error scenarios" name="Verify BigQuery Source properties validation errors for incorrect format of projectIds 2" time="8.114713">
<system-out><![CDATA[Given Open Datafusion Project to configure pipeline.........................passed
When Source is BigQuery.....................................................passed
Then Open BigQuery source properties........................................passed
Then Enter BigQuery property reference name.................................passed
Then Enter BigQuery property projectId "projectId"..........................passed
Then Enter BigQuery property datasetProjectId "bqIncorrectFormatDatasetProjectId".passed
Then Enter BigQuery property dataset "dataset"..............................passed
Then Enter BigQuery source property table name..............................passed
Then Verify plugin properties validation fails with 1 error.................passed
]]></system-out>
</testcase>
<testcase classname="BigQuery source - Verification of BigQuery to BigQuery successful data transfer" name="Validate successful records transfer from BigQuery to BigQuery with filter" time="154.233308">
<system-out><![CDATA[Given Open Datafusion Project to configure pipeline.........................passed
When Source is BigQuery.....................................................passed
When Sink is BigQuery.......................................................passed
Then Open BigQuery source properties........................................passed
Then Enter BigQuery property reference name.................................passed
Then Enter BigQuery property projectId "projectId"..........................passed
Then Enter BigQuery property datasetProjectId "projectId"...................passed
Then Enter BigQuery property dataset "dataset"..............................passed
Then Enter BigQuery source property table name..............................passed
Then Enter BigQuery source property filter "bqFilter".......................passed
Then Validate output schema with expectedSchema "bqSourceSchema"............passed
Then Validate "BigQuery" plugin properties..................................passed
Then Close the BigQuery properties..........................................passed
Then Open BigQuery sink properties..........................................passed
Then Enter the BigQuery sink mandatory properties...........................passed
Then Validate "BigQuery" plugin properties..................................passed
Then Close the BigQuery properties..........................................passed
Then Connect source as "BigQuery" and sink as "BigQuery" to establish connection.passed
Then Save the pipeline......................................................passed
Then Preview and run the pipeline...........................................passed
Then Verify the preview of pipeline is "success"............................passed
Then Click on preview data for BigQuery sink................................passed
Then Verify preview output schema matches the outputSchema captured in properties.passed
Then Close the preview data.................................................passed
Then Deploy the pipeline....................................................passed
Then Run the Pipeline in Runtime............................................passed
Then Wait till pipeline is in running state.................................passed
Then Open and capture logs..................................................passed
Then Verify the pipeline status is "Succeeded"..............................passed
Then Get count of no of records transferred to target BigQuery Table........passed
Then Validate records transferred to target table is equal to number of records from source table with filter "bqFilter".passed
]]></system-out>
</testcase>
<testcase classname="BigQuery source - Verification of BigQuery to BigQuery successful data transfer" name="Validate that pipeline run preview gets failed when incorrect filter values are provided" time="66.242012">
<system-out><![CDATA[Given Open Datafusion Project to configure pipeline.........................passed
When Source is BigQuery.....................................................passed
When Sink is BigQuery.......................................................passed
Then Open BigQuery source properties........................................passed
Then Enter BigQuery property reference name.................................passed
Then Enter BigQuery property projectId "projectId"..........................passed
Then Enter BigQuery property datasetProjectId "projectId"...................passed
Then Enter BigQuery property dataset "dataset"..............................passed
Then Enter BigQuery source property table name..............................passed
Then Enter BigQuery source property filter "bqInvalidFilter"................passed
Then Validate output schema with expectedSchema "bqSourceSchema"............passed
Then Validate "BigQuery" plugin properties..................................passed
Then Close the BigQuery properties..........................................passed
Then Open BigQuery sink properties..........................................passed
Then Enter the BigQuery sink mandatory properties...........................passed
Then Validate "BigQuery" plugin properties..................................passed
Then Close the BigQuery properties..........................................passed
Then Connect source as "BigQuery" and sink as "BigQuery" to establish connection.passed
Then Save the pipeline......................................................passed
Then Preview and run the pipeline...........................................passed
Then Verify the preview of pipeline is "failed".............................passed
]]></system-out>
</testcase>
<testcase classname="BigQuery source - Verification of BigQuery to BigQuery successful data transfer" name="Verify records are getting transferred with respect to partitioned date" time="155.084718">
<system-out><![CDATA[Given Open Datafusion Project to configure pipeline.........................passed
When Source is BigQuery.....................................................passed
When Sink is BigQuery.......................................................passed
Then Open BigQuery source properties........................................passed
Then Enter BigQuery property reference name.................................passed
Then Enter BigQuery property projectId "projectId"..........................passed
Then Enter BigQuery property datasetProjectId "projectId"...................passed
Then Enter BigQuery property dataset "dataset"..............................passed
Then Enter BigQuery source property table name..............................passed
Then Enter BigQuery source properties partitionStartDate and partitionEndDate.passed
Then Validate output schema with expectedSchema "bqPartitionSourceSchema"...passed
Then Validate "BigQuery" plugin properties..................................passed
Then Close the BigQuery properties..........................................passed
Then Open BigQuery sink properties..........................................passed
Then Enter the BigQuery sink mandatory properties...........................passed
Then Validate "BigQuery" plugin properties..................................passed
Then Close the BigQuery properties..........................................passed
Then Connect source as "BigQuery" and sink as "BigQuery" to establish connection.passed
Then Save the pipeline......................................................passed
Then Preview and run the pipeline...........................................passed
Then Verify the preview of pipeline is "success"............................passed
Then Click on preview data for BigQuery sink................................passed
Then Verify preview output schema matches the outputSchema captured in properties.passed
Then Close the preview data.................................................passed
Then Deploy the pipeline....................................................passed
Then Run the Pipeline in Runtime............................................passed
Then Wait till pipeline is in running state.................................passed
Then Open and capture logs..................................................passed
Then Verify the pipeline status is "Succeeded"..............................passed
Then Get count of no of records transferred to target BigQuery Table........passed
Then Validate partition date in output partitioned table....................passed
]]></system-out>
</testcase>
<testcase classname="BigQuery source - Verification of BigQuery to BigQuery successful data transfer" name="Verify records are not getting transferred for future partitioned date" time="104.322197">
<system-out><![CDATA[Given Open Datafusion Project to configure pipeline.........................passed
When Source is BigQuery.....................................................passed
When Sink is BigQuery.......................................................passed
Then Open BigQuery source properties........................................passed
Then Enter BigQuery property reference name.................................passed
Then Enter BigQuery property projectId "projectId"..........................passed
Then Enter BigQuery property datasetProjectId "projectId"...................passed
Then Enter BigQuery property dataset "dataset"..............................passed
Then Enter BigQuery source property table name..............................passed
Then Enter BigQuery source properties partitionStartDate "bqFuturePartitionStartDate" and partitionEndDate "bqFuturePartitionEndDate".passed
Then Validate output schema with expectedSchema "bqPartitionSourceSchema"...passed
Then Validate "BigQuery" plugin properties..................................passed
Then Close the BigQuery properties..........................................passed
Then Open BigQuery sink properties..........................................passed
Then Enter the BigQuery sink mandatory properties...........................passed
Then Validate "BigQuery" plugin properties..................................passed
Then Close the BigQuery properties..........................................passed
Then Connect source as "BigQuery" and sink as "BigQuery" to establish connection.passed
Then Save and Deploy Pipeline...............................................passed
Then Run the Pipeline in Runtime............................................passed
Then Wait till pipeline is in running state.................................passed
Then Open and capture logs..................................................passed
Then Verify the pipeline status is "Succeeded"..............................passed
Then Validate the records are not created in output table...................passed
Then Validate partitioning is not done on the output table..................passed
]]></system-out>
</testcase>
<testcase classname="BigQuery source - Verification of BigQuery to GCS successful data transfer" name="Validate successful records transfer from BigQuery to GCS" time="132.784426">
<system-out><![CDATA[Given Open Datafusion Project to configure pipeline.........................passed
When Source is BigQuery.....................................................passed
When Sink is GCS............................................................passed
Then Open BigQuery source properties........................................passed
Then Enter BigQuery property reference name.................................passed
Then Enter BigQuery property projectId "projectId"..........................passed
Then Enter BigQuery property datasetProjectId "projectId"...................passed
Then Enter BigQuery property dataset "dataset"..............................passed
Then Enter BigQuery source property table name..............................passed
Then Enter BiqQuery property encryption key name "cmekBQ" if cmek is enabled.passed
Then Validate output schema with expectedSchema "bqSourceSchema"............passed
Then Validate "BigQuery" plugin properties..................................passed
Then Close the BigQuery properties..........................................passed
Then Open GCS sink properties...............................................passed
Then Enter the GCS sink mandatory properties................................passed
Then Validate "GCS" plugin properties.......................................passed
Then Close the GCS properties...............................................passed
Then Connect source as "BigQuery" and sink as "GCS" to establish connection.passed
Then Save the pipeline......................................................passed
Then Preview and run the pipeline...........................................passed
Then Verify the preview of pipeline is "success"............................passed
Then Click on preview data for GCS sink.....................................passed
Then Verify preview output schema matches the outputSchema captured in properties.passed
Then Close the preview data.................................................passed
Then Deploy the pipeline....................................................passed
Then Run the Pipeline in Runtime............................................passed
Then Wait till pipeline is in running state.................................passed
Then Open and capture logs..................................................passed
Then Verify the pipeline status is "Succeeded"..............................passed
Then Verify data is transferred to target GCS bucket........................passed
]]></system-out>
</testcase>
<testcase classname="BigQuery source - Verification of BigQuery to Multiple sinks successful data transfer" name="Validate successful records transfer from BigQuery to multiple sinks (GCS, BigQuery and PubSub)" time="36.918589">
<failure message="org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {&quot;method&quot;:&quot;xpath&quot;,&quot;selector&quot;:&quot;//div[@title='BigQuery']/ancestor::div[contains(@data-cy,'plugin-node-BigQuery') and @data-type='batchsource']//*[contains(@data-cy,'plugin-endpoint-BigQuery')]&quot;}&#10;  (Session info: headless chrome=92.0.4515.159)&#10;For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element&#10;Build info: version: '4.0.0-rc-1', revision: 'bc5511cbda'&#10;System info: host: 'runner-deployment-build-e2e-cdapio-65d7f4cfcc-rnptk', ip: '10.116.13.11', os.name: 'Linux', os.arch: 'amd64', os.version: '5.4.144+', java.version: '1.8.0_292'&#10;Driver info: org.openqa.selenium.chrome.ChromeDriver&#10;Command: [c43232d60e83052db03582b238267299, findElement {using=xpath, value=//div[@title='BigQuery']/ancestor::div[contains(@data-cy,'plugin-node-BigQuery') and @data-type='batchsource']//*[contains(@data-cy,'plugin-endpoint-BigQuery')]}]&#10;Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 92.0.4515.159, chrome: {chromedriverVersion: 92.0.4515.107 (87a818b10553..., userDataDir: /tmp/.com.google.Chrome.3lBHFf}, goog:chromeOptions: {debuggerAddress: localhost:40307}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), se:cdp: ws://localhost:40307/devtoo..., se:cdpVersion: 92.0.4515.159, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}&#10;Session ID: c43232d60e83052db03582b238267299&#10;&#9;at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)&#10;&#9;at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)&#10;&#9;at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)&#10;&#9;at java.lang.reflect.Constructor.newInstance(Constructor.java:423)&#10;&#9;at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)&#10;&#9;at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)&#10;&#9;at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)&#10;&#9;at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)&#10;&#9;at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164)&#10;&#9;at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139)&#10;&#9;at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)&#10;&#9;at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)&#10;&#9;at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)&#10;&#9;at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:381)&#10;&#9;at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:373)&#10;&#9;at io.cdap.e2e.pages.locators.CdfStudioLocators.sourceEndpointWithTitle(CdfStudioLocators.java:133)&#10;&#9;at io.cdap.e2e.utils.CdfHelper.connectSourceAndSinkWithTitles(CdfHelper.java:148)&#10;&#9;at stepsdesign.PipelineSteps.connectSourceAsHavingTitleAndSinkAsHavingTitleToEstablishConnection(PipelineSteps.java:93)&#10;&#9;at ✽.Connect source as &quot;BigQuery&quot; having title &quot;BigQuery&quot; and sink1 as &quot;GCS&quot; having title &quot;GCS&quot; to establish connection(file:src/e2e-test/features/bigquery/source/BigQueryToMultipleSinks.feature:12)&#10;"><![CDATA[Given Open Datafusion Project to configure pipeline.........................passed
And Wait for page to render properly........................................passed
When Source is BigQuery.....................................................passed
When Sink is GCS............................................................passed
Then Connect source as "BigQuery" having title "BigQuery" and sink1 as "GCS" having title "GCS" to establish connection.failed
When Sink is BigQuery.......................................................skipped
Then Connect source as "BigQuery" having title "BigQuery" and sink2 as "BigQuery" having title "BigQuery2" to establish connection.skipped
When Sink is PubSub.........................................................skipped
Then Connect source as "BigQuery" having title "BigQuery" and sink3 as "GooglePublisher" having title "Pub/Sub" to establish connection.skipped
Then Open BigQuery source properties........................................skipped
Then Enter the BigQuery source mandatory properties.........................skipped
Then Validate "BigQuery" plugin properties..................................skipped
Then Close the BigQuery properties..........................................skipped
Then Open GCS sink properties...............................................skipped
Then Enter the GCS sink mandatory properties................................skipped
Then Enter GCS property encryption key name "cmekGCS" if cmek is enabled....skipped
Then Validate "GCS" plugin properties.......................................skipped
Then Close the GCS properties...............................................skipped
Then Open BigQuery sink properties..........................................skipped
Then Enter the BigQuery sink mandatory properties...........................skipped
Then Enter BiqQuery property encryption key name "cmekBQ" if cmek is enabled.skipped
Then Validate "BigQuery" plugin properties..................................skipped
Then Close the BigQuery properties..........................................skipped
Then Open the PubSub sink properties........................................skipped
Then Enter the PubSub sink mandatory properties.............................skipped
Then Enter PubSub sink property encryption key name "cmekPubSub" if cmek is enabled.skipped
Then Validate "PubSub" plugin properties....................................skipped
Then Close the PubSub properties............................................skipped
Then Save the pipeline......................................................skipped
Then Preview and run the pipeline...........................................skipped
Then Verify the preview of pipeline is "success"............................skipped
Then Close the preview......................................................skipped
Then Deploy the pipeline....................................................skipped
Then Run the Pipeline in Runtime............................................skipped
Then Wait till pipeline is in running state.................................skipped
Then Open and capture logs..................................................skipped
Then Verify the pipeline status is "Succeeded"..............................skipped
Then Verify data is transferred to target GCS bucket........................skipped
Then Get count of no of records transferred to target BigQuery Table........skipped
Then Validate the cmek key "cmekGCS" of target GCS bucket if cmek is enabled.skipped
Then Validate the cmek key "cmekBQ" of target BigQuery table if cmek is enabled.skipped
Then Validate the cmek key "cmekPubSub" of target PubSub topic if cmek is enabled.skipped

StackTrace:
org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@title='BigQuery']/ancestor::div[contains(@data-cy,'plugin-node-BigQuery') and @data-type='batchsource']//*[contains(@data-cy,'plugin-endpoint-BigQuery')]"}
  (Session info: headless chrome=92.0.4515.159)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.0.0-rc-1', revision: 'bc5511cbda'
System info: host: 'runner-deployment-build-e2e-cdapio-65d7f4cfcc-rnptk', ip: '10.116.13.11', os.name: 'Linux', os.arch: 'amd64', os.version: '5.4.144+', java.version: '1.8.0_292'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c43232d60e83052db03582b238267299, findElement {using=xpath, value=//div[@title='BigQuery']/ancestor::div[contains(@data-cy,'plugin-node-BigQuery') and @data-type='batchsource']//*[contains(@data-cy,'plugin-endpoint-BigQuery')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 92.0.4515.159, chrome: {chromedriverVersion: 92.0.4515.107 (87a818b10553..., userDataDir: /tmp/.com.google.Chrome.3lBHFf}, goog:chromeOptions: {debuggerAddress: localhost:40307}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), se:cdp: ws://localhost:40307/devtoo..., se:cdpVersion: 92.0.4515.159, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: c43232d60e83052db03582b238267299
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
	at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:381)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:373)
	at io.cdap.e2e.pages.locators.CdfStudioLocators.sourceEndpointWithTitle(CdfStudioLocators.java:133)
	at io.cdap.e2e.utils.CdfHelper.connectSourceAndSinkWithTitles(CdfHelper.java:148)
	at stepsdesign.PipelineSteps.connectSourceAsHavingTitleAndSinkAsHavingTitleToEstablishConnection(PipelineSteps.java:93)
	at ✽.Connect source as "BigQuery" having title "BigQuery" and sink1 as "GCS" having title "GCS" to establish connection(file:src/e2e-test/features/bigquery/source/BigQueryToMultipleSinks.feature:12)
]]></failure>
</testcase>
</testsuite>
